import{_ as l,c as n,a0 as i,b as h,w as a,a1 as p,B as k,o as t,G as d,a as r}from"./chunks/framework.CxXbVT5p.js";const u=JSON.parse('{"title":"时间有关模块","description":"","frontmatter":{},"headers":[],"relativePath":"python/24-时间有关模块.md","filePath":"python/24-时间有关模块.md","lastUpdated":1734618217000}'),g={name:"python/24-时间有关模块.md"};function o(E,s,c,y,F,m){const e=k("Mermaid");return t(),n("div",null,[s[1]||(s[1]=i(`<h1 id="时间有关模块" tabindex="-1">时间有关模块 <a class="header-anchor" href="#时间有关模块" aria-label="Permalink to &quot;时间有关模块&quot;">​</a></h1><h2 id="timeit-模块" tabindex="-1">timeit 模块 <a class="header-anchor" href="#timeit-模块" aria-label="Permalink to &quot;timeit 模块&quot;">​</a></h2><p><a href="https://docs.python.org/zh-cn/3/library/timeit.html" target="_blank" rel="noreferrer"><code>timeit</code></a>模块提供简单的方法来计算一小段 Python 代码的耗时。简单使用如下</p><p><code>timeit.timeit(eval/lambda, number=10000)</code> 运行 10000 次中的最快用时</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    pass</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timeit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(timeit.timeit(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">globals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">globals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()))</span></span></code></pre></div><h2 id="time-模块" tabindex="-1">time 模块 <a class="header-anchor" href="#time-模块" aria-label="Permalink to &quot;time 模块&quot;">​</a></h2><p><a href="https://docs.python.org/zh-cn/3/library/time.html" target="_blank" rel="noreferrer"><code>time</code></a>模块提供了各种时间相关的底层函数。最常用方法有：</p><ul><li><code>time.sleep()</code> 线程睡眠，接收浮点秒数。</li><li><code>time.time()</code> 戳一个时间。</li></ul><h3 id="格式转换" tabindex="-1">格式转换 <a class="header-anchor" href="#格式转换" aria-label="Permalink to &quot;格式转换&quot;">​</a></h3><p>在 Python 中，通常有这三种方式来表示时间</p><ul><li>时间元组(struct_time)</li><li>时间戳(timestamp)</li><li>格式化时间(Format String)</li></ul><h4 id="timestamp" tabindex="-1">timestamp <a class="header-anchor" href="#timestamp" aria-label="Permalink to &quot;timestamp&quot;">​</a></h4><p>形如：<code>1588218207.4545252</code></p><p>通常来说，时间戳表示的是从 1970 年 1 月 1 日 00:00:00 开始按秒计算的偏移量。</p><p>我们运行<code>time.time()</code>，返回的是当前时间戳，是 float 类型。</p><h4 id="format-string" tabindex="-1">Format String <a class="header-anchor" href="#format-string" aria-label="Permalink to &quot;Format String&quot;">​</a></h4><p>形如：<code>&#39;2017-07-24 13:54:37&#39;</code></p><p>运行<code>time.strftime(&quot;%Y-%m-%d %H-%M-%S&quot;)</code>，返回当前格式化时间，参数中它支持以下指令</p><table tabindex="0"><thead><tr><th style="text-align:left;">指令</th><th style="text-align:left;">意义</th></tr></thead><tbody><tr><td style="text-align:left;"><code>%a</code></td><td style="text-align:left;">本地化的缩写星期中每日的名称。</td></tr><tr><td style="text-align:left;"><code>%A</code></td><td style="text-align:left;">本地化的星期中每日的完整名称。</td></tr><tr><td style="text-align:left;"><code>%b</code></td><td style="text-align:left;">本地化的月缩写名称。</td></tr><tr><td style="text-align:left;"><code>%B</code></td><td style="text-align:left;">本地化的月完整名称。</td></tr><tr><td style="text-align:left;"><code>%c</code></td><td style="text-align:left;">本地化的适当日期和时间表示。</td></tr><tr><td style="text-align:left;"><code>%d</code></td><td style="text-align:left;">十进制数 [01,31] 表示的月中日。</td></tr><tr><td style="text-align:left;"><code>%H</code></td><td style="text-align:left;">十进制数 [00,23] 表示的小时（24 小时制）。</td></tr><tr><td style="text-align:left;"><code>%I</code></td><td style="text-align:left;">十进制数 [01,12] 表示的小时（12 小时制）。</td></tr><tr><td style="text-align:left;"><code>%j</code></td><td style="text-align:left;">十进制数 [001,366] 表示的年中日。</td></tr><tr><td style="text-align:left;"><code>%m</code></td><td style="text-align:left;">十进制数 [01,12] 表示的月。</td></tr><tr><td style="text-align:left;"><code>%M</code></td><td style="text-align:left;">十进制数 [00,59] 表示的分钟。</td></tr><tr><td style="text-align:left;"><code>%p</code></td><td style="text-align:left;">本地化的 AM 或 PM 。</td></tr><tr><td style="text-align:left;"><code>%S</code></td><td style="text-align:left;">十进制数 [00,61] 表示的秒。</td></tr><tr><td style="text-align:left;"><code>%U</code></td><td style="text-align:left;">十进制数 [00,53] 表示的一年中的周数（星期日作为一周的第一天）。在第一个星期日之前的新年中的所有日子都被认为是在第 0 周。</td></tr><tr><td style="text-align:left;"><code>%w</code></td><td style="text-align:left;">十进制数 [0(<strong>星期日</strong>),6] 表示的周中日。</td></tr><tr><td style="text-align:left;"><code>%W</code></td><td style="text-align:left;">十进制数 [00,53] 表示的一年中的周数（星期一作为一周的第一天）。在第一个星期一之前的新年中的所有日子被认为是在第 0 周。</td></tr><tr><td style="text-align:left;"><code>%x</code></td><td style="text-align:left;">本地化的适当日期表示。</td></tr><tr><td style="text-align:left;"><code>%X</code></td><td style="text-align:left;">本地化的适当时间表示。</td></tr><tr><td style="text-align:left;"><code>%y</code></td><td style="text-align:left;">十进制数 [00,99] 表示的没有世纪的年份。</td></tr><tr><td style="text-align:left;"><code>%Y</code></td><td style="text-align:left;">十进制数表示的带世纪的年份。</td></tr><tr><td style="text-align:left;"><code>%z</code></td><td style="text-align:left;">时区偏移以格式 +HHMM 或 -HHMM 形式的 UTC/GMT 的正或负时差指示，其中 H 表示十进制小时数字，M 表示小数分钟数字 [-23:59, +23:59] 。</td></tr><tr><td style="text-align:left;"><code>%Z</code></td><td style="text-align:left;">时区名称（如果不存在时区，则不包含字符）。</td></tr><tr><td style="text-align:left;"><code>%%</code></td><td style="text-align:left;">字面的 <code>&#39;%&#39;</code> 字符。</td></tr></tbody></table><h4 id="struct-time" tabindex="-1">struct_time <a class="header-anchor" href="#struct-time" aria-label="Permalink to &quot;struct_time&quot;">​</a></h4><p>struct_time 元组共有 9 个元素共九个元素:(年，月，日，时，分，秒，一年中第几周，一年中第几天等）</p><table tabindex="0"><thead><tr><th>索引（Index）</th><th>属性（Attribute）</th><th>值（Values）</th></tr></thead><tbody><tr><td>.</td><td>tm_zone</td><td>时区名称的缩写</td></tr><tr><td>.</td><td>tm_gmtoff</td><td>以秒为单位的 UTC 以东偏离</td></tr><tr><td>0</td><td>tm_year（年）</td><td>比如 2011</td></tr><tr><td>1</td><td>tm_mon（月）</td><td>1 - 12</td></tr><tr><td>2</td><td>tm_mday（日）</td><td>1 - 31</td></tr><tr><td>3</td><td>tm_hour（时）</td><td>0 - 23</td></tr><tr><td>4</td><td>tm_min（分）</td><td>0 - 59</td></tr><tr><td>5</td><td>tm_sec（秒）</td><td>0 - 61</td></tr><tr><td>6</td><td>tm_wday（星期几）</td><td>0 - 6 (星期一是 0 依次)</td></tr><tr><td>7</td><td>tm_yday（一年中的第几天）</td><td>1 - 366</td></tr><tr><td>8</td><td>tm_isdst（是否是夏令时）</td><td>默认为 0</td></tr></tbody></table><h4 id="当前时间的三种格式" tabindex="-1">当前时间的三种格式 <a class="header-anchor" href="#当前时间的三种格式" aria-label="Permalink to &quot;当前时间的三种格式&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 导入时间模块</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 时间戳</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1500875844.800804</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 时间字符串</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.strftime(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;%Y-%m-%d %X&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;2017-07-24 13:54:37&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.strftime(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;%Y-%m-%d %H-%M-%S&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;2017-07-24 13-55-04&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 时间元组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># localtime将一个时间戳转换为当前时区的struct_time</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.localtime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.struct_time(tm_year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2017,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mon</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">7,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">24,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">　　　　　　　　　　tm_hour</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=13,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tm_min=59,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tm_sec=37,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 tm_wday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_yday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">205,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_isdst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="三种格式的转换" tabindex="-1">三种格式的转换 <a class="header-anchor" href="#三种格式的转换" aria-label="Permalink to &quot;三种格式的转换&quot;">​</a></h4>`,25)),(t(),h(p,null,{default:a(()=>[d(e,{id:"mermaid-424",class:"mermaid",graph:"flowchart%0A%20%20%20%20struct_time%20--strftime--%3E%20format_string%0A%20%20%20%20struct_time%20--mktime--%3E%20timestamp%0A%20%20%20%20timestamp%20--localtime%2Fgmtime--%3E%20struct_time%0A%20%20%20%20format_string%20--strptime--%3E%20struct_time%0A"})]),fallback:a(()=>s[0]||(s[0]=[r(" Loading... ")])),_:1})),s[2]||(s[2]=i(`<h5 id="timestamp-⇄-struct-time" tabindex="-1">timestamp ⇄ struct_time <a class="header-anchor" href="#timestamp-⇄-struct-time" aria-label="Permalink to &quot;timestamp ⇄ struct_time&quot;">​</a></h5><ul><li><code>time.gmtime(timestamp) -&gt; struct_time </code></li><li><code>time.localtime(timestamp) -&gt; struct_time </code></li><li><code>time.mktime(struct_time) -&gt; timestamp </code></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># UTC时间。与英国伦敦当地时间一致</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.gmtime(1500000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.struct_time(tm_year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2017,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mon</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">7,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">14,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_hour</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 tm_min</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">40,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_sec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_wday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">4,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_yday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">195,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_isdst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 当地时间。北京与UTC时间相差+8小时</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.localtime(1500000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.struct_time(tm_year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2017,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mon</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">7,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">14,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_hour</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 tm_min</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">40,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_sec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_wday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">4,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_yday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">195,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_isdst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 与time.localtime相反效果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time_tuple</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time.localtime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1500000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.mktime(time_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1500000000.0</span></span></code></pre></div><h5 id="struct-time-⇄-format-string" tabindex="-1">struct_time ⇄ Format String <a class="header-anchor" href="#struct-time-⇄-format-string" aria-label="Permalink to &quot;struct_time ⇄ Format String&quot;">​</a></h5><ul><li><code>time.strftime(模板字符串, struct_time=当前) -&gt; FormatString</code></li><li><code>time.strptime(FormatString, 模板字符串) -&gt; struct_time </code></li></ul><p>值得注意的是，在 Python3.8 之前，时间的模板字符串里不支持非 Ascii 字符。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#结构化时间参数若不传，则显示当前时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.strftime(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;%Y-%m-%d %X&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;2017-07-24 14:55:36&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.strftime(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;%Y-%m-%d&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,time.localtime(1500000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;2017-07-14&#39;</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.strptime(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;2017-03-16&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;%Y-%m-%d&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.struct_time(tm_year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2017,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mon</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">16,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_hour</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 tm_min</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_sec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_wday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_yday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">75,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_isdst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.strptime(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;07/24/2017&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;%m/%d/%Y&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time.struct_time(tm_year</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2017,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mon</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">7,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_mday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">24,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_hour</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                 tm_min</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_sec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_wday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_yday</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">205,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tm_isdst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h5 id="与标准-a-b-d-h-m-s-y格式的-format-string-之间的转换" tabindex="-1">与标准<code>%a %b %d %H:%M:%S %Y</code>格式的 Format String 之间的转换 <a class="header-anchor" href="#与标准-a-b-d-h-m-s-y格式的-format-string-之间的转换" aria-label="Permalink to &quot;与标准\`%a %b %d %H:%M:%S %Y\`格式的 Format String 之间的转换&quot;">​</a></h5><ul><li><code>time.asctime(struct_time) → Format %a %b %d %H:%M:%S %Y String</code></li><li><code>time.ctime(timestamp) → Format %a %b %d %H:%M:%S %Y String</code></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果不传参数，直接返回当前时间的格式化串</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.asctime(time.localtime(1500000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;Fri Jul 14 10:40:00 2017&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.asctime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;Mon Jul 24 15:18:33 2017&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果不传参数，直接返回当前时间的格式化串</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.ctime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;Mon Jul 24 15:19:07 2017&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time.ctime(1500000000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;Fri Jul 14 10:40:00 2017&#39;</span></span></code></pre></div><h2 id="calendar-模块" tabindex="-1">calendar 模块 <a class="header-anchor" href="#calendar-模块" aria-label="Permalink to &quot;calendar 模块&quot;">​</a></h2><p><a href="https://docs.python.org/zh-cn/3/library/calendar.html" target="_blank" rel="noreferrer"><code>calendar</code></a>模块提供了日历相关的函数，和格式化输出日历。</p><p>常量</p><ul><li><code>.MONDAY</code> = 0</li><li><code>.TUESDAY</code> = 1</li><li><code>.WEDNESDAY</code> = 2</li><li><code>.THURSDAY</code> = 3</li><li><code>.FRIDAY</code> = 4</li><li><code>SATURDAY</code> = 5</li><li><code>.SUNDAY</code> = 6</li></ul><p>常用函数</p><ul><li><code>.isleap</code>(<em>year</em>) 是否是闰年</li><li><code>.weekday</code>(<em>year</em>, <em>month</em>, <em>day</em>) 是星期几（星期一是 0 依次）</li><li><code>.weekheader</code>(<em>n</em>) 得到星期几的缩写头，n 是字符宽度</li><li><code>.monthrange</code>(<em>year</em>, <em>month</em>) 得到一个月第一天是星期几和这个月的天数</li><li><code>.timegm</code>(struct_time) 与<code>time.gmtime()</code>相反效果</li></ul><p>常用类</p><ul><li><code>.TextCalendar</code>(<em>firstweekday=0</em>) 简单文本日历</li><li><code>.HTMLCalendar</code>(<em>firstweekday=0</em>) 超文本日历</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> calendar</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#简单使用月历</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">calendar.month</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2021,4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     April</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2021</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Mo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Tu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> We</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Th</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Fr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Sa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Su</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 11</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">12</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 13</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 17</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">19</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 21</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 22</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">26</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 27</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 28</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 29</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#本地化月历  前缀Locale-</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#“ja-JP” 日语</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#&quot;fr-FR&quot; 法语</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#“zh-CN” 国语</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#&#39;en-US&#39; 嘤语</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> calendar.LocaleTextCalendar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(locale</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fr-FR&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">frc.formatmonth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2020,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     avril</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2020</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ma</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> me</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> je</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ve</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> di</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  5</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  9</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 11</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">13</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 17</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 19</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">20</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 21</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 22</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 26</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">27</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 28</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 29</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果需要星期日在第一位 需要设置firstweekday=6或者SUNDAY</span></span></code></pre></div><p>注意：</p><ul><li>本质调用<code>locale.setlocale()</code>，使用后会一直生效，且非线程安全。</li><li>由于等宽字体的限制，不推荐使用非字母的本地语言。</li><li>非字母的本地语言如果要使用，还需要调整<code>formatmonth</code>的<code>w</code>参数大于 2</li><li>如果出现乱码，可以尝试以下： <ul><li>重编码（推荐）</li><li>加字符集，如<code>ja_JP.UTF-8</code> （低版本连接符为下划线）<br> （低版本可能需要捕获第一次 setlocale 的异常，python3.8 以上修复了）</li></ul></li></ul><h2 id="datetime-模块" tabindex="-1">datetime 模块 <a class="header-anchor" href="#datetime-模块" aria-label="Permalink to &quot;datetime 模块&quot;">​</a></h2><p><a href="https://docs.python.org/zh-cn/3/library/datetime.html" target="_blank" rel="noreferrer"><code>datetime</code></a>模块提供用于处理日期和时间的类。</p><p>时间对象分为感知型和简单型，感知型相比简单型多了时区，夏令时等信息。</p><h3 id="常用类" tabindex="-1">常用类 <a class="header-anchor" href="#常用类" aria-label="Permalink to &quot;常用类&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">类名</th><th style="text-align:center;">功能说明</th></tr></thead><tbody><tr><td style="text-align:center;">timedelta</td><td style="text-align:center;">时间间隔类</td></tr><tr><td style="text-align:center;">tzinfo</td><td style="text-align:center;">感知型信息抽象类</td></tr><tr><td style="text-align:center;">timezone</td><td style="text-align:center;">tzinfo 类的子类，时区信息类</td></tr><tr><td style="text-align:center;">date</td><td style="text-align:center;">简单型日期类</td></tr><tr><td style="text-align:center;">time</td><td style="text-align:center;">时间类</td></tr><tr><td style="text-align:center;">datetime</td><td style="text-align:center;">date 类的子类，日期时间类</td></tr></tbody></table><p>实例化 timedelta 时间间隔类</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jp_offset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.timedelta(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hours</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>实例化 timezone 时区信息类</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.timezone(jp_offset, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Tokyo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>夏时制不深入讨论，需要实现抽象基类 tzinfo 上的<code>.dst()</code>方法，timezone 类并未将其实现。推荐第三方模块或者 python3.9+实现的<a href="https://docs.python.org/zh-cn/3.9/library/zoneinfo.html#module-zoneinfo" target="_blank" rel="noreferrer"><code>zoneinfo</code></a> 模块（这是一个基于系统时区数据的实体 <a href="https://docs.python.org/zh-cn/3.9/library/datetime.html#datetime.tzinfo" target="_blank" rel="noreferrer"><code>datetime.tzinfo</code></a> 实现）</p><h3 id="date-类" tabindex="-1">date 类 <a class="header-anchor" href="#date-类" aria-label="Permalink to &quot;date 类&quot;">​</a></h3><p>代表一个理想化历法中的日期（年、月和日），即当今的格列高利历向前后两个方向无限延伸</p><p>它是一个不可变类型（hashable）</p><h4 id="实例化生成" tabindex="-1">实例化生成 <a class="header-anchor" href="#实例化生成" aria-label="Permalink to &quot;实例化生成&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2017</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="静态方法生成" tabindex="-1">静态方法生成 <a class="header-anchor" href="#静态方法生成" aria-label="Permalink to &quot;静态方法生成&quot;">​</a></h4><ul><li><code>datetime.date.today</code>() 返回本地日期 date 对象</li><li><code>datetime.date.fromisoformat</code>(<em>date_string</em>) 格式化字符串 → 本地日期 date 对象，只支持<code>YYYY-MM-DD</code></li><li><code>datetime.date.fromtimestamp</code>(<em>timestamp</em>) 时间戳 → 本地日期 date 对象</li></ul><h4 id="对象属性和方法" tabindex="-1">对象属性和方法 <a class="header-anchor" href="#对象属性和方法" aria-label="Permalink to &quot;对象属性和方法&quot;">​</a></h4><ul><li><code>.year</code>, <code>.month</code>, <code>.day</code> 数据描述符（只读）</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> datetime.date.today</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">datetime.date(2017,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b.year</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2017</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b.month</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b.day</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">22</span></span></code></pre></div><ul><li><code>.replace()</code> 替换数据描述符的属性值</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a.replace(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">day</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">26</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># datetime.date(2017, 3, 26)</span></span></code></pre></div><ul><li><code>.timetuple()</code> 转 struct_time 元组，补 0</li><li><code>.weekday()</code> 星期几 星期一为 0 依次</li><li><code>.isoweekday()</code> 星期几 没有 0，星期一为 1 依次</li><li><code>.isocalendar()</code> 返回元组<code>(年, 周，星期)</code> 星期规则同<code>.isoweekday()</code></li></ul><h5 id="比较和做差" tabindex="-1">比较和做差 <a class="header-anchor" href="#比较和做差" aria-label="Permalink to &quot;比较和做差&quot;">​</a></h5><p>由于实现了诸多魔术方法，两个 date 对象之间可以比较和做差</p><p>做差将返回 datetime.timedelta 对象</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">False</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">datetime.timedelta(days</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.days</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">7</span></span></code></pre></div><h5 id="格式化输出" tabindex="-1">格式化输出 <a class="header-anchor" href="#格式化输出" aria-label="Permalink to &quot;格式化输出&quot;">​</a></h5><ul><li><p><code>.strftime(模板字符串)</code> 格式化方法</p></li><li><p><code>.isoformat()</code> 返回符合 ISO 8601 标准但截断 (<code>yyyy-MM-dd</code>) 的日期字符串</p></li><li><p>魔术方法<code>__str__()</code>和<code>.__format__()</code> 可以使用格式化的一切方法。</p></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b.__format__(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;%Y-%m-%d&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;2017-03-22&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b.isoformat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;2017-03-22&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">b.strftime(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;%y&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;17&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format(b,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;%D&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;03/22/17&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">str(b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;2017-03-22&#39;</span></span></code></pre></div><h3 id="time-类" tabindex="-1">time 类 <a class="header-anchor" href="#time-类" aria-label="Permalink to &quot;time 类&quot;">​</a></h3><p>一个 time 对象代表某日的（本地）时间，它独立于任何特定日期，并可通过 tzinfo 对象来调整。</p><h4 id="实例化生成-1" tabindex="-1">实例化生成 <a class="header-anchor" href="#实例化生成-1" aria-label="Permalink to &quot;实例化生成&quot;">​</a></h4><p><code>datetime.time</code>(<em>hour=0</em>, <em>minute=0</em>, <em>second=0</em>, <em>microsecond=0</em>, <em>tzinfo=None</em>)</p><h4 id="静态方法生成-1" tabindex="-1">静态方法生成 <a class="header-anchor" href="#静态方法生成-1" aria-label="Permalink to &quot;静态方法生成&quot;">​</a></h4><p><code>datetime.time.fromisoformat</code>(<em>time_string</em>) <code>.isoformat</code>的逆操作</p><h4 id="对象属性和方法-1" tabindex="-1">对象属性和方法 <a class="header-anchor" href="#对象属性和方法-1" aria-label="Permalink to &quot;对象属性和方法&quot;">​</a></h4><p>和 date 对象一样，实例化时的参数将成为实例对象的数据描述符（只读）</p><p><code>.replace()</code> 替换数据描述符的属性值</p><h5 id="比较和做差运算" tabindex="-1">比较和做差运算 <a class="header-anchor" href="#比较和做差运算" aria-label="Permalink to &quot;比较和做差运算&quot;">​</a></h5><p>time 对象不能做差，比较的时候要求 tzinfo 属性一致。</p><h5 id="格式化输出-1" tabindex="-1">格式化输出 <a class="header-anchor" href="#格式化输出-1" aria-label="Permalink to &quot;格式化输出&quot;">​</a></h5><ul><li><p><code>.strftime(模板字符串)</code> 格式化方法</p></li><li><p><code>.isoformat</code>(<em>timespec=&#39;auto&#39;</em>) 返回符合 ISO 8601 标准 (<code>HH:mm:ss.ffffff</code>) 的时间字符串</p><p>默认的<code>auto</code>会在<code>.ffffff</code>为<code>.000000</code>的时候不显示，即整秒时为<code>HH:mm:ss</code></p><p>可设置的其他值：</p><ul><li><code>&#39;hours&#39;</code>: 以两个数码的 <code>HH</code> 格式</li><li><code>&#39;minutes&#39;</code>: 以 <code>HH:mm</code> 格式</li><li><code>&#39;seconds&#39;</code>: 以 <code>HH:mm:ss</code> 格式</li><li><code>&#39;milliseconds&#39;</code>: 包含完整时间，但将秒值截断至微秒（三位）</li><li><code>&#39;microseconds&#39;</code>: 以 <code>HH:mm:ss.ffffff</code> 格式包含完整时间。</li></ul></li><li><p>魔术方法<code>__str__()</code>, <code>__format__()</code></p></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">offset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> datetime.timedelta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hours</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">shanghai_timez</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> datetime.timezone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">offset,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Shanghai&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bonjour</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> datetime.time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">7,30,tzinfo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=shanghai_timez</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bonjour.isoformat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;07:30:00+08:00&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bonjour.strftime(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;%H:%M:%S %Z&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;07:30:00 Shanghai&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format(bonjour,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;与格林尼治时间相差%z小时&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;与格林尼治时间相差+0800小时&#39;</span></span></code></pre></div><h3 id="datetime-类" tabindex="-1">datetime 类 <a class="header-anchor" href="#datetime-类" aria-label="Permalink to &quot;datetime 类&quot;">​</a></h3><p>datetime 类可以看做是 date 类和 time 类的合体</p><p>由于是继承的 date 类，这里<strong>只介绍派生的方法</strong>。</p><h4 id="实例化生成-2" tabindex="-1">实例化生成 <a class="header-anchor" href="#实例化生成-2" aria-label="Permalink to &quot;实例化生成&quot;">​</a></h4><p><code>datetime.datetime(year, month, day, hour, minute, second, microsecond,tzinfo)</code></p><h4 id="静态方法生成-2" tabindex="-1">静态方法生成 <a class="header-anchor" href="#静态方法生成-2" aria-label="Permalink to &quot;静态方法生成&quot;">​</a></h4><ul><li><code>datetime.datetime.now</code>(<em>tz=None</em>) 当前的 datetime 对象，可传入时区，默认系统时区</li><li><code>datetime.datetime.utcnow</code>() 生成简单型 datetime 对象，消除时区信息</li><li><code>datetime.datetime.utcfromtimestamp</code>(<em>timestamp</em>) 由<em>timestamp</em>生成 datetime 对象，消除时区信息</li><li><code>datetime.datetime.combine</code>(<em>date</em>, <em>time</em>[, <em>tzinfo</em>]) 由 date 对象和 time 对象生成</li><li><code>datetime.datetime.strptime</code>(<em>date_string</em>, <em>format</em>) 由 date_string 生成 datetime 对象</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datetime.datetime.strptime(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2017-3-22 15:25&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%Y-%m-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %H:%M&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># datetime.datetime(2017, 3, 22, 15, 25)</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">ISO8601</p><p><code>datetime.datetime.fromisoformat</code>(<em>datetime_string</em>)<br> 只支持如<code>2020-11-11T09:36:27+00:00</code> 不支持 <code>2020-11-11T09:36:27Z</code></p></div><h4 id="对象属性和方法-2" tabindex="-1">对象属性和方法 <a class="header-anchor" href="#对象属性和方法-2" aria-label="Permalink to &quot;对象属性和方法&quot;">​</a></h4><ul><li><code>.date()</code> 拆解出 date 对象</li><li><code>.time()</code> 拆解出 time 对象</li><li><code>.timestamp()</code> 6 位浮点的时间戳</li><li><code>.utctimetuple()</code> 返回消除时区信息的 struct_time</li></ul><h5 id="格式化输出-2" tabindex="-1">格式化输出 <a class="header-anchor" href="#格式化输出-2" aria-label="Permalink to &quot;格式化输出&quot;">​</a></h5><p><code>.isoformat</code>(<em>sep=&#39;T&#39;, timespec=&#39;auto&#39;</em>) 同 date 类的同名方法，sep 是日期和时间之间的分隔符。</p><h4 id="时区转换" tabindex="-1">时区转换 <a class="header-anchor" href="#时区转换" aria-label="Permalink to &quot;时区转换&quot;">​</a></h4><ul><li><code>.astimezone(tz)</code> 偏移时间</li><li><code>.replace(tzinfo=</code> 转换时区</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 时间戳转utc</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.datetime.utcfromtimestamp(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1454060831</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2016-01-29 09:47:11</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转上海时间（上面已经定义了shanghai_timez）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.replace(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tzinfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datetime.timezone.utc).astimezone(shanghai_timez)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2016-01-29 17:47:11+08:00</span></span></code></pre></div><p>也可以简单点：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.timedelta(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hours</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,85))])}const B=l(g,[["render",o]]);export{u as __pageData,B as default};
